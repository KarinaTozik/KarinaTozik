1..NET Framework — программная платформа, основой которой  является общеязыковая среда исполнения Common Language Runtime (CLR), которая подходит для разных языков программирования. 

2..NET Framework предоставляет среду выполнения (среду CLR), которая выполняет код и предлагает службы, облегчающие процесс разработки.

3.FCL,сокращённо BCL, — стандартная библиотека классов платформы «.NET Framework». Программы, написанные на любом из языков, поддерживающих платформу .NET, могут пользоваться классами и методами BCL — создавать объекты классов, вызывать их методы, наследовать необходимые классы BCL и т. д.

4.Сборка

5.IL (Instruction List) — язык программирования стандарта IEC61131-3. Предназначен для программирования промышленных контроллеров. По синтаксису напоминает ассемблер.

6.JIT-компиляция, динамическая компиляция — технология увеличения производительности программных систем, использующих байт-код, путём компиляции байт-кода в машинный код или в другой формат непосредственно во время работы программы. Таким образом достигается высокая скорость выполнения по сравнению с интерпретируемым байт-кодом за счёт увеличения потребления памяти и затрат времени на компиляцию.

7.Common Type System (CTS) — часть .NET Framework, формальная спецификация, определяющая, как какой-либо тип (класс, интерфейс, структура, встроенный тип данных) должен быть определён для его правильного выполнения средой .NET. Кроме того, данный стандарт определяет, как определения типов и специальные значения типов представлены в компьютерной памяти.

8.Он позволяет :
-сравнить два экземпляра на равенство
-получить хэщ-код экземпляра 
-запросить тип экземпляра 
-копировать экземпляр
-получить экземпляр в строковом виде

9.Mscorlib.ni.dll (Microsoft Common Language Runtime Class Library) - это файл DLL в Windows. DLL - это аббревиатура от Dynamic Link Library (динамически подключаемая библиотека). DLL файлы необходимы программам или расширениям веб-браузера, потому что они содержат программный код, данные и ресурсы.

10.Частные находятся в каталоге программы, а общие в GAC

11. Описывает элементы сборки, взаимодействующие друг с другом.

12.GAC- подсистема, хранящая сборки CLI в централизованном репозитории.

13.Управляемый код (managed code) — термин, введённый фирмой Microsoft, для обозначения кода программы, исполняемой под «управлением» виртуальной машины .NET — Common Language Runtime или Mono. При этом машинный код называется неуправляяемым кодом (unmanaged code).

14.Метод Main указывает точку начала выполнения программы.

15.Директива using используется в двух случаях:
разрешает использование типов в пространстве имен, поэтому уточнение использования типа в этом пространстве имен не требуется: using System.Text;
позволяет создавать псевдонимы пространства имен или типа. Это называется директива using alias: using Project = PC.MyCompany.Project;

16.Во-первых, платформа .NET Framework использует пространства имен для организации множества классов. Во-вторых, объявление собственного пространства имен поможет в управлении областью действия имен классов и методов в крупных программных проектах.

17.Примитивный тип - это несоставной тип данных, тоесть такие типы как int, double, boolean, single, byte и т.д., занимающие в памяти строго определенное количество байт.

18.Переменные ссылочных типов, называемые объектами, сохраняют ссылки на фактические данные. В данном разделе описаны следующие ключевые слова, используемые для объявления ссылочных типов: class, interface, delegate.

19.Встроенные примитивные типы данных, такие как char, int и float, а также пользовательские типы, объявленные со структурой.

20.Значимые типы хранят значение, а ссылочные - ссылку на значение.

21.Процесс преобразования типа значения в ссылочный тип называется упаковкой. Обратный процесс — преобразование ссылочного типа в тип значения — называется распаковкой.

22.Тип dynamic позволяет пропускать проверки типов во время компиляции операции, в которых он применяется. Вместо этого эти операции определяются во время выполнения. Тип dynamic упрощает доступ к API модели COM, например API автоматизации Office, к динамическим API, например библиотекам IronPython, и модели DOM HTML.

23.Начиная с версии С# 3.0, компилятору предоставляется возможность самому определить тип локальной переменной, исходя из значения, которым она инициализируется. Такая переменная называется неявно типизированной.

24.Nullable тип основан на структуре SystemNulleble, которая разрешает присваивать значение типам null-значения.
 
25."Строковый литерал" — это последовательность символов исходной кодировки, заключенных в двойные кавычки (" "). Строковые литералы используются для представления последовательности символов, которые вместе образуют строку, завершающуюся нуль-символом. Перед двухбайтовыми строковыми литералами всегда должна ставиться буква L.

26. char [] a ={'0', '0', '0'};
	string s;
	string t = "qqq"; //строковый литерал
	string u = new string (' ', 20);
	string v = new string (a);

27.Clone, Compare, Concat, Copy, Equals, Format, GetType, LastIndex, Remove, Split, ToLower, ToUpper

28.Пустая - 0 символов (string s = "";). NULL- не ссылается на экземпляр объекта.

29.Статический метод String.Compare позволяет тщательно сравнивать две строки. Этот метод учитывает язык и региональные параметры. Эту функцию можно использовать для сравнения двух строк или подстрок двух строк.

30.String - используется для работы со строковыми литералами, а StringBuilder - эффективен для работы с изменяемыми строками. 

31.Значение, которое требуется преобразовать, можно передать в один из соответствующих методов класса Convert и присвоить возвращаемое значение новой переменной.

32.int x = Console.ReadLine();
	Console.Writeline (У меня: {OneMillion});

33.Одномерные: int[][] jaggedArray = new int[3][]; 

jaggedArray[0] = new int[] { 1, 3, 5, 7, 9 };
jaggedArray[1] = new int[] { 0, 2, 4, 6 };
jaggedArray[2] = new int[] { 11, 22 };

 int[][] jaggedArray3 = 
{
    new int[] {1,3,5,7,9},
    new int[] {0,2,4,6},
    new int[] {11,22}
};

Многомерные:  int[][,] jaggedArray4 = new int[3][,] 
{
    new int[,] { {1,3}, {5,7} },
    new int[,] { {0,2}, {4,6}, {8,10} },
    new int[,] { {11,22}, {99,88}, {0,9} } 
};

34.Ступенчатый массив представляет собой массив массивов, в котором длина каждого массива может быть разной. Следовательно, ступенчатый массив может быть использован для составления таблицы из строк разной длины.
	int [][] a = {new int [3], new int [5], new int [4]};

35.Массивы, коллекции. Классы в которых реализован интерфейс System.Collections.IEnumerable.

36.Кортедж- комбинация объектов различных типов (от 1 до 8)

37. Локальные функции представляют функции, определенные внутри других методов.
 static int GetResult(int[] numbers)
    {
        int limit = 0;
        // локальная функция
        bool IsMoreThan(int number)
        {...
